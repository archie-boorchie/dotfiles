## i3 config file

# Use super key as mod key
set $mod Mod4

# Font for window titles
font pango:Noto Regular 7

# Kill focused window
bindsym $mod+q kill

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exiting i3 (lock, suspend, logout, reboot, poweroff)
bindsym $mod+Shift+e exec source ~/dotfiles/i3/scripts/i3-exiting.sh

# Start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# Toggle terminal transparency
bindsym $mod+shift+b exec "sh ~/dotfiles/i3/scripts/i3-toggle-blur.sh"

# Toggle the bar
bindsym $mod+b exec polybar-msg cmd toggle

# Start rofi
bindsym $mod+d exec rofi -config ~/.config/rofi/config.rasi -show drun
bindsym $mod+Shift+d exec rofi -config ~/.config/rofi/config.rasi -show window

# Manage clipboard
bindsym $mod+p exec clipmenu -i -fn Terminus:size=8 -nb '#002b36' -nf '#839496' -sb '#073642' -sf '#93a1a1'
bindsym $mod+Ctrl+p exec clipdel -d ".*"

# Screenshot shortcuts
bindsym $mod+y exec maim -u -m 10 ~/Pictures/screenshots/src_`date +%s`.png
bindsym $mod+Shift+y exec maim -u -m 10 -s ~/Pictures/screenshots/src_`date +%s`.png
bindsym $mod+Ctrl+y exec maim -u -m 10 -i $(xdotool getactivewindow) ~/Pictures/screenshots/src_`date +%s`.png

## Window management

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Split in vertical orientation 
bindsym $mod+v split v

# Split in horizontal orientation 
bindsym $mod+Shift+v split h

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout toggle split
bindsym $mod+Ctrl+s layout stacking
bindsym $mod+t layout tabbed

# Focus the parent container
bindsym $mod+a focus parent

# Focus the child container
bindsym $mod+Shift+a focus child

# Jump to urgent window
bindsym $mod+x [urgent=last] focus

## Floating windows

# Toggle tiling/floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Move floating window to the position of mouse
bindsym --whole-window $mod+button1 move position mouse

# Enable floating for specific windows
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [class="Tor Browser"] floating enable

## Workspaces

# Define names for the workspaces
set $ws0 "0"
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Switch to workspace
bindsym $mod+grave workspace $ws0
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# Move focused container to workspace
bindsym $mod+Shift+grave move container to workspace $ws0
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Jump to previous workspace
bindsym $mod+Tab workspace back_and_forth

# Cycle through workspaces on current output
bindsym $mod+Shift+Tab workspace next_on_output

## Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id "sh ~/dotfiles/i3/scripts/i3-volume-control.sh up"
bindsym XF86AudioLowerVolume exec --no-startup-id "sh ~/dotfiles/i3/scripts/i3-volume-control.sh down"
bindsym XF86AudioMute        exec --no-startup-id "sh ~/dotfiles/i3/scripts/i3-volume-control.sh mute"

## Sreen brightness controls
bindsym XF86MonBrightnessUp   exec --no-startup-id "sh ~/dotfiles/i3/scripts/i3-brightness-control.sh up"
bindsym XF86MonBrightnessDown exec --no-startup-id "sh ~/dotfiles/i3/scripts/i3-brightness-control.sh down"

# Toggle touchpad
bindsym $mod+Ctrl+l exec sh ~/dotfiles/i3/scripts/i3-toggle-touchpad.sh

# Media player controls
bindsym XF86AudioPlay  exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext  exec playerctl next
bindsym XF86AudioPrev  exec playerctl previous

# Resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 2 px or 2 ppt
    bindsym j resize grow height 2 px or 2 ppt
    bindsym k resize shrink height 2 px or 2 ppt
    bindsym l resize grow width 2 px or 2 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 2 px or 2 ppt
    bindsym Down resize grow height 2 px or 2 ppt
    bindsym Up resize shrink height 2 px or 2 ppt
    bindsym Right resize grow width 2 px or 2 ppt

    # trigger floating window resize mode
    bindsym f mode "resize floating window"; focus floating

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

# Resize floating windows easily
mode "resize floating window" {
    # moving through the floating windows
    bindsym f focus left

    # move to center of screen
    bindsym c move position center

    # move to cursor position
    bindsym --whole-window button1 move position mouse
    bindsym --whole-window $mod+button1 move position mouse

    # set horizontal or vertical orientation
    bindsym plus    resize set 900 555
    bindsym shift+h resize set 900 555
    bindsym v resize set 600 800

    # grow or shrink floating window in place
    bindsym minus move right 8 px; move down 4 px; resize shrink width 16 px; resize shrink height 8 px
    bindsym shift+plus move left 8 px; move up 4 px; resize grow width 16 px; resize grow height 8 px
    bindsym h move right 5 px; resize shrink width 10 px
    bindsym l move left 5 px; resize grow width 10 px
    bindsym j move down 5 px; resize shrink height 10 px
    bindsym k move up 5 px; resize grow height 10 px

    # Enter or Escape for normal mode; r or $mod+r for regular resize mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym r mode "resize"
    bindsym $mod+r mode "resize"
}

bindsym $mod+r mode "resize"

# Minimum and maximum size for floating windows
floating_minimum_size 100 x 100
floating_maximum_size -1 x -1

# Toggle sticky windows
bindsym $mod+s sticky toggle

# Colors
# class                 border  backgr. text    indicator child_border
client.focused          #fba922 #222222 #ffffff 333333    #fba922
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #aaaaaa #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff

# Borders
for_window [class="^.*"] border pixel 0
# for_window [title=" - Wolfram Mathematica"] border normal 1 # I nead titles in .nb files

## Gaps

set $in_gaps 40
set $out_gaps 30
gaps inner $in_gaps
gaps outer $out_gaps
hide_edge_borders smart

# Gaps resizing mode
set $mode_gaps_inner Gaps (inner)
bindsym $mod+g mode "$mode_gaps_inner"
set $mode_gaps_outer Gaps (outer)
bindsym $mod+Shift+g mode "$mode_gaps_outer"

mode "$mode_gaps_inner" {
        bindsym Shift+plus gaps inner all plus 1
        bindsym minus gaps inner all minus 1
        bindsym plus gaps inner all set $in_gaps
        bindsym 0 gaps inner all set 0

        bindsym Ctrl+Shift+plus gaps inner current plus 1
        bindsym Ctrl+minus gaps inner current minus 1
        bindsym Ctrl+plus gaps inner current set $in_gaps
        bindsym Ctrl+0 gaps inner current set 0

        bindsym o mode "$mode_gaps_outer"
        bindsym i mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym Shift+plus gaps outer all plus 1
        bindsym minus gaps outer all minus 1
        bindsym plus gaps outer all set $out_gaps
        bindsym 0 gaps outer all set 0

        bindsym Ctrl+Shift+plus gaps outer current plus 1
        bindsym Ctrl+minus gaps outer current minus 1
        bindsym Ctrl+plus gaps outer current set $out_gaps
        bindsym Ctrl+0 gaps outer current set 0

        bindsym i mode "$mode_gaps_inner"
        bindsym o mode "$mode_gaps_outer"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Only enable outer gaps when there is exactly one container
smart_gaps inverse_outer

## Monitors

# External monitor mode
set $mode_external_monitor Monitor(s): [d]ual, [e]xternal, [l]aptop, [m]irror
bindsym $mod+m mode "$mode_external_monitor"

mode "$mode_external_monitor" {
        bindsym d exec --no-startup-id sh ~/dotfiles/i3/scripts/i3-dual-screen.sh d; mode "default"
        bindsym e exec --no-startup-id sh ~/dotfiles/i3/scripts/i3-dual-screen.sh e; mode "default"
        bindsym l exec --no-startup-id sh ~/dotfiles/i3/scripts/i3-dual-screen.sh l; mode "default"
        bindsym m exec --no-startup-id sh ~/dotfiles/i3/scripts/i3-dual-screen.sh m; mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Move focused window between monitors
bindsym $mod+Shift+greater move container to output right
bindsym $mod+Shift+less    move container to output left

# Move focused workspace between monitors
bindsym $mod+Ctrl+greater move workspace to output right
bindsym $mod+Ctrl+less    move workspace to output left

## Notifications

# Pause/resume Dunst notifications mode
set $mode_dunst Notifications: [p]ause, [r]esume
bindsym $mod+n mode "$mode_dunst"

mode "$mode_dunst" {
        bindsym p exec termite -e "dunstctl set-paused true"; mode "default"
        bindsym r exec termite -e "dunstctl set-paused false"; mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# # i3 grid manager
# bindsym $mod+i exec /bin/bash ~/dotfiles/i3/scripts/grid-rofi/manager.sh
#
# # Dedicated shortcuts for frequently used commands (less keystrokes)
# # bindsym $mod+c exec "python3 -m i3grid reset"
#
# # Grid floating windows
# mode "i3grid" {
#     bindsym q exec "python3 -m i3grid snap --cols 2 --rows 2 --target 1"
#     bindsym e exec "python3 -m i3grid snap --cols 2 --rows 2 --target 2"
#     bindsym z exec "python3 -m i3grid snap --cols 2 --rows 2 --target 3"
#     bindsym c exec "python3 -m i3grid snap --cols 2 --rows 2 --target 4"
#
#     bindsym w exec "python3 -m i3grid snap --cols 1 --rows 2 --target 1"
#     bindsym x exec "python3 -m i3grid snap --cols 1 --rows 2 --target 2"
#
#     bindsym a exec "python3 -m i3grid snap --cols 2 --rows 1 --target 1"
#     bindsym d exec "python3 -m i3grid snap --cols 2 --rows 1 --target 2"
#     bindsym s exec "python3 -m i3grid reset"
#     bindsym f exec "python3 -m i3grid csize --perc 100"
#
#     bindsym g exec "python3 -m i3grid csize --perc 33"
#     bindsym h exec "python3 -m i3grid csize --perc 50"
#     bindsym j exec "python3 -m i3grid csize --perc 66"
#     bindsym k exec "python3 -m i3grid csize --perc 85"
#     bindsym l exec "python3 -m i3grid csize --perc 92"
#     bindsym p exec "python3 -m i3grid snap --cols 3 --rows 3 --target 3"
#     bindsym o exec "python3 -m i3grid snap --cols 3 --rows 3 --target 2"
#     bindsym i exec "python3 -m i3grid snap --cols 3 --rows 3 --target 1"
#
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }
# bindsym $mod+shift+o mode "i3grid"

## Scratchpad windows

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show/hide scratchpad windows
bindsym $mod+minus scratchpad show

# Create a scratchpad terminal on the fly
bindsym $mod+Shift+Return exec --no-startup-id alacritty --class="scratchpad_terminal"

# Settings for scratchpad terminals
for_window [title="Alacritty" instance="scratchpad_terminal"] floating enable sticky enable
for_window [title="Alacritty" instance="scratchpad_terminal_startup"] floating enable sticky enable move scratchpad

## Autostart programs

# Wallpaper
exec_always --no-startup-id feh --bg-scale ~/.wallpaper

# Keyboard configuration already exist in xinitrc but it is overwritten 
exec_always --no-startup-id sh ~/dotfiles/i3/scripts/i3-keys-config.sh 

# Launch Polybar 
exec_always --no-startup-id sh ~/dotfiles/polybar/launch.sh

# Hide cursor
exec --no-startup-id unclutter --timeout 1 --jitter 15 --ignore-scrolling --fork

# Manage clipboard
exec --no-startup-id clipmenud

# Create a scratchpad terminal at startup
exec --no-startup-id alacritty --class="scratchpad_terminal_startup"

# Low battery notification
exec_always --no-startup-id i3-battery-popup -n -L 30 -l 20 -m "Low Battery!"
exec_always --no-startup-id i3-battery-popup -n -L 15 -l 10 -m "Please charge!"

# Launch a compositor
#exec_always --no-startup-id picom --experimental-backend
# I use the picom-ibhagwan-git package from the AUR which fixes rounded corners
# It doesn't require --experimental-backend
exec_always --no-startup-id picom

# Create an archlinux system info screen at startup
exec --no-startup-id sh ~/dotfiles/i3/scripts/i3-startup.sh
